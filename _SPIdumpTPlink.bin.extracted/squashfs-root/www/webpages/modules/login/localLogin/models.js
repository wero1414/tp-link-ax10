$.su.define("loginProxy",{extend:"IPFProxy",url:$.su.url("/login?form=login"),api:{login:{writeFilter:function(e){return e.operation="login",e},isLogin:!0}}}),$.su.modelManager.define("localLogin",{type:"model",fields:[{name:"password"},{name:"stok",disabled:!0}],proxy:"loginProxy",methods:{login:function(e){var o=this.getData("submit");e.data=$.extend({},e.data,o),this.getProxy().login(e)}}}),$.su.modelManager.define("localLoginControl",{type:"model",fields:[{name:"password",vtype:{vtype:"ascii_visible"},maxLength:32,minLength:1,allowBlank:!1}]}),$.su.define("loginCheckInternetProxy",{extend:"IPFProxy",preventFailEvent:!0,url:$.su.url("/login?form=check_internet")}),$.su.define("forgetPasswordProxy",{extend:"IPFProxy",url:$.su.url("/login?form=password"),writeFilter:function(e){return $.extend({operation:"read"},e)}}),$.su.define("sendCodeProxy",{extend:"IPFProxy",url:$.su.url("/login?form=vercode")}),$.su.define("sysmodeLoginProxy",{extend:"IPFProxy",url:$.su.url("/login?form=sysmode")}),$.su.modelManager.define("vercodeModel",{type:"model",preventFailEvent:!0,fields:[{name:"vercode",serialize:function(e){return $.trim(e)}}],proxy:"sendCodeProxy"}),$.su.modelManager.define("resetPwdModel",{type:"model",fields:[{name:"password",vtype:{vtype:"ascii_visible||string_no_spaces||symbols_combined_pws"},maxLength:32,minLength:6,allowBlank:!1},{name:"confirm",allowBlank:!1}]});