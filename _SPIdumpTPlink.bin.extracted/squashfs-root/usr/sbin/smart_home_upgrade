#!/usr/bin/lua

-- 
-- smart_home_upgrade.lua
-- [in]  upgrade fw
-- 

local nixio = require "nixio"
local uci = require "luci.model.uci"
local sys    = require "luci.sys"
local json  = require "luci.json"
local dbg = require "luci.tools.debug"
local cloud_account =  require "luci.controller.admin.cloud_account"
local firmware = require"luci.controller.admin.firmware"

local function main()
	local upgrade_form_download = {form = {"cloud_upgrade"},operation = "upgrade"}
	local ret_download = cloud_account.dispatch(upgrade_form_download)
	dbg.printf("[upgrade_firmware]ret_download:" .. json.encode(ret_download))
	if ret_download.success ~= true then
		return -1206
	end
	
	local upgrade_form_status = {form = {"detect_upgrade_status"},operation = "read"}
	local ret_status
	local pid = nixio.fork()
	if pid == 0 then
		local command = "sleep %d; smart_home_upgrade dl_start" % (tonumber(delayS))
		dbg("upgrade_firmware command:%s" % json.encode(command))
		sys.fork_exec(command)
		while true do
			ret_status = cloud_account.dispatch(upgrade_form_status)
			dbg.printf("[upgrade_firmware]ret_status:" .. json.encode(ret_status))
			if (ret_status.success and ret_status.success ~= true) or (ret_status.data.percent and ret_status.data.percent >= 100) then
				break
			end
			os.execute("sleep 1")
		end
		local upgrade_form = {form = {"upgrade"},operation = "fwup_check"}
		ret_upgrade = firmware.dispatch(upgrade_form)
		dbg.printf("[upgrade_firmware]ret_upgrade:" .. json.encode(ret_upgrade))
	else
		return 0
	end  
end

main()


