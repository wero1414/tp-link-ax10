#!/bin/sh

. /lib/functions.sh

. /lib/bcmenet/bcmenet_c5400s.sh
. /lib/switch/core_phy.sh

network_save_config()
{
	lua -e 'require("luci.sys.config").saveconfig();'
}

network_lanwan_config()
{
	local wan_sec=$1
	local lan_sec=$2
	uci set switch.wan.switch_port=$wan_sec
	uci set switch.lan4.switch_port=$lan_sec
	uci commit switch

	# !!! FIXME: modify netifd later !!!
	local wan_if=$(uci get switch.${wan_sec}.ifname)
	uci set profile.@wan[0].wan_ifname=$wan_if -c /etc/profile.d

	# sync qos_v2 settings
	if [ $wan_sec == "wanlan4" ]; then
		uci set profile.@qos_v2[0].max_wan_speed="2500" -c /etc/profile.d
	elif [ $wan_sec == "lan4wan" ]; then
		uci set profile.@qos_v2[0].max_wan_speed="1000" -c /etc/profile.d
	fi
	
	uci commit -c /etc/profile.d
}

network_lanwan_swap()
{	
	# stop network
	/etc/init.d/network stop

	unsetup_wan_ports

	# uci set
	network_lanwan_config $@
	
	# reconfig intf
	c5400s_get_interface_group
	config_if
	c5400s_interface_init_config
	network_save_config
	
	# setup lan wan ports
	get_lan_wan_ifnames
	pause_enable_lan_ports
	setup_wan_pause
	setup_wan_duplex
	setup_wan_ports
	
	# restart network
	local iptv_en=$(uci get iptv.iptv.enable)
	if [ "${iptv_en}" == "on" ]; then
		/etc/init.d/iptv restart
	else
		/etc/init.d/network restart
	fi

	# restart tm_shn for qos
	if [[ -f /etc/init.d/tm_shn ]]; then
		/etc/init.d/tm_shn stop
		rm /tmp/tm-shn/*.key
		cp /usr/bin/tm-shn/pre_lic.key /tmp/tm-shn/
		sleep 30
		/etc/init.d/tm_shn start
	fi
}


network_lanwan_set()
{
	local old_wan=""
	local wan_sec=""
	
	if [ $# -lt 1 ] ; then
		echo  "1 params required" >&2
		return 1
	fi

	if [ "$1" == "1000WAN" ]; then
		wan_sec="lan4wan"
	elif [ "$1" == "2500WAN" ]; then
		wan_sec="wanlan4"
	else
		echo "Only 1000WAN/2500WAN Supported!" >&2
		return 1
	fi

	old_wan=$(uci get switch.wan.switch_port)
	if [ "$old_wan" != "$wan_sec" ]; then
		network_lanwan_swap $wan_sec $old_wan
	else
		echo "Current is $1 already, No change." >&2
	fi
} 2> /dev/console 1>&2

network_lanwan_show()
{
	local wan_sec=$(uci get switch.wan.switch_port)
	local wan_unit=$(uci get switch.${wan_sec}.unit)
	local wan_port=$(uci get switch.${wan_sec}.port)
	local wan_speed=$(uci get switch.${wan_sec}.portspeed)
	local wan_ifname=$(uci get switch.${wan_sec}.ifname)

	echo "Current WAN is $wan_ifname, unit $wan_unit port $wan_port speed $wan_speed" >/dev/console
}

case $1 in
	"set")
		network_lanwan_set $2
		;;
		
	"show")
		network_lanwan_show
		;;
		
	*)
		echo "Usage: network_lanwan_swap set/show ..."
		echo "  set 1000WAN/2500WAN"
		echo "  show"
		;;
esac

