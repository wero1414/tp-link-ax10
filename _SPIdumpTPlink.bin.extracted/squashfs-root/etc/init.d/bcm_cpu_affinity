#!/bin/sh /etc/rc.common
# This script configures interrupt & thread affinity regarding to WLAN.
#
# imported form SDK
# userspace/private/apps/wlan/scripts/wlaffinity
# bcmdrivers/broadcom/net/wl/impl59/main/components/router/rc/rc.c:wl_thread_affinity_update()

START=99

MAX_WLAN_ADAPTER=4
NUM_PROCESSOR=`cat /proc/cpuinfo | grep -c "processor"`
NUM_WL_INTF=`ls -al /sys/class/net/wl* 2>&1 | grep -c "wl. "`

#$(getStrByPos "12 33 44" " " 2) will return 33
getStrByPos() {
        local num=$3;
        IFS="$2"
        set -- $1
        eval result='$'$num;
        echo $result;
}

getPidByName() 
{
    local pid=$(getStrByPos "`ps | grep -v grep | grep $1`" " " 1);
    if [ -z $pid ]; then 
        echo 0;
    else
        echo $pid;
    fi
}

#trim leading and trailing space
trim() {
    if [ ! -z $* ]; then
        local var="$*"
        var="${var#"${var%%[![:space:]]*}"}"
        var="${var%"${var##*[![:space:]]}"}"   
        echo -n "$var"
    fi
}

#change bitmask number to string mark of bit postion string
getBitmaskStr() {
    local affinity=$((0x$1));
    local cpu cpu_mask cpus="";
    local cpu=0;
    if [ ! -z $affinity ]; then
        while [ ${cpu} -lt ${NUM_PROCESSOR} ];
        do
            cpu_mask=$((1 << $cpu)) 
            if [ $((affinity&cpu_mask)) -gt 0 ]; then
                if [ "$cpus" = "" ]; then
                    cpus=$cpu
                else
                    cpus=$cpus"-$cpu"
                fi
            fi
            cpu=$((cpu+1));
        done
    fi
    echo $cpus;
}

process_name() 
{
    local radio=$2;
    case "$1" in 
        wl)
            echo "wl${radio}-kthrd"
            ;;
        dhd)
            echo "dhd${radio}_dpc";
            ;;
        wfd)
            echo "wfd${radio}-thrd";
            ;;
        events)
            echo "events/${radio}";
            ;;
    esac
}

#get radio D11 MAC interupt with inputted
# $1 - radio number:  0/1/2
# $2 - handler name:  dhdpcie/wlpcie
getRadioInterrupt() {
  if [ -z "$2" ]; then
    hndler="wl"
  else
    hndler=$2
  fi
  local interrupt_line=`cat /proc/interrupts |grep "wl$1" |grep $hndler`
  if [ ! -z "$interrupt_line" ]; then
      interrupt=$(getStrByPos "${interrupt_line}" ":" 1)
      echo $(trim $interrupt);
  fi
}

#get radio D11 MAC interrupt affinity with inputted radio number :0/1/2
#get radio D11 MAC interupt affinity with inputted
# $1 - radio number:  0/1/2
# $2 - handler name:  dhdpcie/wlpcie
getRadioIntAffinity() {
    local interrupt=$(getRadioInterrupt $1 $2);
    if [ ! -z $interrupt ]; then
        local affinity="/proc/irq/$interrupt/smp_affinity";
        echo `cat $affinity 2>/dev/NULL`
    fi
}

#get radio M2M interupt with inputted radio number :0/1/2
getRadioM2MInterrupt() {
  local interrupt_line=`cat /proc/interrupts |grep "wlan_${1}_m2m"`
  if [ ! -z "$interrupt_line" ]; then
      interrupt=$(getStrByPos "${interrupt_line}" ":" 1)
      echo $(trim $interrupt);
  fi
}

#get radio M2M interrupt affinity with inputted radio number :0/1/2
getRadioM2MIntAffinity() {
    local interrupt=$(getRadioM2MInterrupt $1);
    if [ ! -z $interrupt ]; then
        local affinity="/proc/irq/$interrupt/smp_affinity";
        echo `cat $affinity 2>/dev/NULL`
    fi
}

getPidAffinityNum() {
    echo $(getStrByPos "`taskset -p $1`" " " 6);
}

getPidAffinity() {
    local pid=$1;
    echo $(getBitmaskStr $(getPidAffinityNum $pid));
}

getPidPriority() {
    echo $(getStrByPos "`chrt -p $1 | grep priority`" " " 6)
}

setProcPriority() {
    local nvram_name=$1
    local proc_name=$2
    local pid=$3
    local prio=$4
    echo "set $proc_name and pid:$pid to prio:$prio"
    chrt -p $prio $pid> /dev/null 2>&1
    if [ "$?" != "0" ]; then
        echo "Failed to set $proc_name to realtime priority $prio"
    fi
    #nvram kset $nvram_name=$prio;
}

setProcAffinity() {
    local nvram_name=$1
    local proc_name=$2
    local pid=$3
    local affinity=$4
    echo "set $proc_name $pid to aff:$affinity"
    taskset -p $affinity $pid> /dev/null 2>&1
    if [ "$?" != "0" ]; then
        echo "pin $proc_name failed, rc=$?, pid_wl0=$pid"
    fi
    #nvram kset $nvram_name=$affinity
}


### command set #####

#Set WLAN D11 MAC interrupt affinity with inputted radio number :0/1/2
setRadioIntAffinity() {
    local radio=$1;
    local affinity=$2;
    local irq=$(getRadioInterrupt $radio);
    if [ ! -z $affinity ]; then 
        echo $affinity >/proc/irq/$irq/smp_affinity 2>/dev/NULL
        #nvram kset wl${radio}_interrupt_affinity=${affinity}
    fi	
}

#Set WLAN M2M interrupt affinity with inputted radio number :0/1/2
setRadioM2MIntAffinity() {
    local radio=$1;
    local affinity=$2;
    local irq=$(getRadioM2MInterrupt $radio);
    if [ ! -z $affinity ] && [ ! -z $irq ]; then
        echo $affinity >/proc/irq/$irq/smp_affinity 2>/dev/NULL
        #nvram kset wlan_${radio}_m2m_interrupt_affinity=${affinity}
    fi
}

set_default_affinity_platArcher63178()
{
    local radio affinity

    # /* bind bcm_archer_us to cpu#2 */
    affinity=$((1 << 2))
    proc_name=bcm_archer_us
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi
    
    # /* bind bcmsw_rx to cpu#0 */
    affinity=$((1 << 0))
    proc_name=bcmsw_rx
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi
    
    # /* bind bcmsw_recycle to cpu#1 */
    affinity=$((1 << 1))
    proc_name=bcmsw_recycle
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi

    # /* bind bcm_archer_wlan to cpu#1 */
    affinity=$((1 << 1))
    proc_name=bcm_archer_wlan
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi

    radio=0
    while [ $radio -lt $NUM_WL_INTF ];
    do
        # /* bind wl/dhd to cpu#1. */
        if [ "$radio" = "0" ]; then
            #bind wl0 to cpu#1
            affinity=$((1 << 1))
        else
            # for products with avira like AX90 and with pctl_v2+qos_v2 like AX3200
            local qos=`uci get qos_v2.settings.enable`
            # for products with avira like AX90
            local avira_enable=$(uci_get_state avira info enable)
            # for products with TM like GX90
            local homecare=$(uci_get_state system system homecare)
            if [ "$qos" = "on" -o x"${avira_enable}" = x"on" -o x"${homecare}" = x"enable" ]; then 
                #bind wl1 to cpu#2
                affinity=$((1 << 2))
            else
                #bind wl1 to cpu#1
                affinity=$((1 << 1))
            fi
        fi
        #echo "affinity=$affinity"
        for ctl_item in dhd wl
        do
            proc_name=$(process_name $ctl_item $radio);
            proc_pid=$(getPidByName $proc_name);
            if [ $proc_pid -gt 0 ]; then
                setProcAffinity "" $proc_name $proc_pid $affinity
            fi
        done

        #Set WLAN D11 MAC interrupt affinity
        setRadioIntAffinity $radio $affinity;

        #Set WLAN M2M interrupt affinity
        setRadioM2MIntAffinity $radio $affinity;

        radio=$((radio+1))
    done
}

set_default_priority()
{
    local ctl_item radio priority

    radio=0
    priority=5
    while [ $radio -lt $NUM_WL_INTF ];
    do
        for ctl_item in wfd wl
        do
            proc_name=$(process_name $ctl_item $radio);
            proc_pid=$(getPidByName $proc_name);
            if [ $proc_pid -gt 0 ]; then
                setProcPriority "" $proc_name $proc_pid $priority
            fi
        done
        radio=$((radio+1))
    done
}

set_default_affinity_platArcher47622()
{
    # wl0-2 <> 5G2/2.4G/5G1
    local default_cpu_map="0 1 2"
    local fc_cpu_map="1 3 2"
	
    local radio affinity
    local qos avira_enable homecare cpu_map index

    # for dual-band, bind wl0(2.4G) to cpu3
    if [ $NUM_WL_INTF -eq 2 ]; then
        #wl0-1 <> 2.4G/5G
        fc_cpu_map="3 1 2"
    fi

    # /* bind bcm_archer_us to cpu#3 */
    affinity=$((1 << 3))
    proc_name=bcm_archer_us
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi

    # /* bind bcmsw_rx to cpu#0 */
    affinity=$((1 << 0))
    proc_name=bcmsw_rx
    proc_pid=$(getPidByName $proc_name);
    if [ $proc_pid -gt 0 ]; then
        setProcAffinity "" $proc_name $proc_pid $affinity
    fi

    # for product with avira like AX90 and with pctl_v2+qos_v2 like AX3200
    qos=`uci get qos_v2.settings.enable`
    # for product with avira like AX90
    avira_enable=$(uci_get_state avira info enable)
    # for product with TM like GX90
    homecare=$(uci_get_state system system homecare)
    if [ "$qos" = "on" -o x"${avira_enable}" = x"on" -o x"${homecare}" = x"enable" ]; then
    	cpu_map=$fc_cpu_map
    else
    	cpu_map=$default_cpu_map
    fi
    index=0
    for cpu in ${cpu_map}
    do    	
    	eval "cpu_radio${index}=\${cpu}"
    	index=$((index+1))
    done

    radio=0
    while [ $radio -lt $NUM_WL_INTF ];
    do    	
        eval "local cpu=\${cpu_radio${radio}}"
        affinity=$((1 << ${cpu}))
        #echo "affinity=$affinity"
        for ctl_item in dhd wl
        do
            proc_name=$(process_name $ctl_item $radio);
            proc_pid=$(getPidByName $proc_name);
            if [ $proc_pid -gt 0 ]; then
                setProcAffinity "" $proc_name $proc_pid $affinity
            fi
        done

        #Set WLAN D11 MAC interrupt affinity
        setRadioIntAffinity $radio $affinity;

        #Set WLAN M2M interrupt affinity
        setRadioM2MIntAffinity $radio $affinity;

        radio=$((radio+1))
    done

    # # /* bind bcm_archer_wlan to cpu#dhd if exists */
    # proc_name=bcm_archer_wlan
    # proc_pid=$(getPidByName $proc_name);
    # if [ $proc_pid -gt 0 ]; then
        # radio=0
        # hdlr_name=dhdpcie
        # while [ $radio -lt $NUM_WL_INTF ];
        # do
            # affinity=$(getRadioIntAffinity $radio $hdlr_name);
            # if [ ! -z $affinity ]; then 
                # setProcAffinity "" $proc_name $proc_pid $affinity
                # break
            # fi
            # radio=$((radio+1))
        # done
    # fi
}

start()
{
    local BCM_MODEL=`cat /proc/device-tree/model`

    if [ "$BCM_MODEL" == "Broadcom BCM963178" ]; then  # Archer based platforms with 3 cpu cores.
        set_default_affinity_platArcher63178
    elif [ "$BCM_MODEL" == "Broadcom BCM947622" ]; then  # Archer based platforms with 4 cpu cores.
        set_default_affinity_platArcher47622
    else  # High-end wfd based platforms
        echo "######### MODEL $BCM_MODEL is not supported! #######" >/dev/console
    fi
    
    set_default_priority
}
